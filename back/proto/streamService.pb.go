// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: proto/streamService.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StreamServiceCreateRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Video       string `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	Views       string `protobuf:"bytes,5,opt,name=views,proto3" json:"views,omitempty"`
	Clicks      string `protobuf:"bytes,6,opt,name=clicks,proto3" json:"clicks,omitempty"`
	Likes       string `protobuf:"bytes,7,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes    string `protobuf:"bytes,8,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
}

func (x *StreamServiceCreateRq) Reset() {
	*x = StreamServiceCreateRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceCreateRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceCreateRq) ProtoMessage() {}

func (x *StreamServiceCreateRq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceCreateRq.ProtoReflect.Descriptor instead.
func (*StreamServiceCreateRq) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{0}
}

func (x *StreamServiceCreateRq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StreamServiceCreateRq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StreamServiceCreateRq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StreamServiceCreateRq) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *StreamServiceCreateRq) GetViews() string {
	if x != nil {
		return x.Views
	}
	return ""
}

func (x *StreamServiceCreateRq) GetClicks() string {
	if x != nil {
		return x.Clicks
	}
	return ""
}

func (x *StreamServiceCreateRq) GetLikes() string {
	if x != nil {
		return x.Likes
	}
	return ""
}

func (x *StreamServiceCreateRq) GetDislikes() string {
	if x != nil {
		return x.Dislikes
	}
	return ""
}

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Video       string `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	Views       string `protobuf:"bytes,5,opt,name=views,proto3" json:"views,omitempty"`
	Clicks      string `protobuf:"bytes,6,opt,name=clicks,proto3" json:"clicks,omitempty"`
	Likes       string `protobuf:"bytes,7,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes    string `protobuf:"bytes,8,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
	CreatedAt   string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{1}
}

func (x *Stream) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Stream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Stream) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Stream) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Stream) GetViews() string {
	if x != nil {
		return x.Views
	}
	return ""
}

func (x *Stream) GetClicks() string {
	if x != nil {
		return x.Clicks
	}
	return ""
}

func (x *Stream) GetLikes() string {
	if x != nil {
		return x.Likes
	}
	return ""
}

func (x *Stream) GetDislikes() string {
	if x != nil {
		return x.Dislikes
	}
	return ""
}

func (x *Stream) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type StreamServiceCreateRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StreamServiceCreateRs) Reset() {
	*x = StreamServiceCreateRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceCreateRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceCreateRs) ProtoMessage() {}

func (x *StreamServiceCreateRs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceCreateRs.ProtoReflect.Descriptor instead.
func (*StreamServiceCreateRs) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{2}
}

func (x *StreamServiceCreateRs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StreamServiceGetAllRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StreamServiceGetAllRq) Reset() {
	*x = StreamServiceGetAllRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceGetAllRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceGetAllRq) ProtoMessage() {}

func (x *StreamServiceGetAllRq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceGetAllRq.ProtoReflect.Descriptor instead.
func (*StreamServiceGetAllRq) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{3}
}

type StreamServiceGetAllRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streams []*Stream `protobuf:"bytes,1,rep,name=streams,proto3" json:"streams,omitempty"`
}

func (x *StreamServiceGetAllRs) Reset() {
	*x = StreamServiceGetAllRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceGetAllRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceGetAllRs) ProtoMessage() {}

func (x *StreamServiceGetAllRs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceGetAllRs.ProtoReflect.Descriptor instead.
func (*StreamServiceGetAllRs) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{4}
}

func (x *StreamServiceGetAllRs) GetStreams() []*Stream {
	if x != nil {
		return x.Streams
	}
	return nil
}

type StreamServiceGetRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    int64  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StreamServiceGetRq) Reset() {
	*x = StreamServiceGetRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceGetRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceGetRq) ProtoMessage() {}

func (x *StreamServiceGetRq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceGetRq.ProtoReflect.Descriptor instead.
func (*StreamServiceGetRq) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{5}
}

func (x *StreamServiceGetRq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *StreamServiceGetRq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StreamServiceGetRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Video       string `protobuf:"bytes,4,opt,name=video,proto3" json:"video,omitempty"`
	Views       string `protobuf:"bytes,5,opt,name=views,proto3" json:"views,omitempty"`
	Clicks      string `protobuf:"bytes,6,opt,name=clicks,proto3" json:"clicks,omitempty"`
	Likes       string `protobuf:"bytes,7,opt,name=likes,proto3" json:"likes,omitempty"`
	Dislikes    string `protobuf:"bytes,8,opt,name=dislikes,proto3" json:"dislikes,omitempty"`
	CreatedAt   string `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *StreamServiceGetRs) Reset() {
	*x = StreamServiceGetRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceGetRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceGetRs) ProtoMessage() {}

func (x *StreamServiceGetRs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceGetRs.ProtoReflect.Descriptor instead.
func (*StreamServiceGetRs) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{6}
}

func (x *StreamServiceGetRs) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StreamServiceGetRs) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StreamServiceGetRs) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StreamServiceGetRs) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *StreamServiceGetRs) GetViews() string {
	if x != nil {
		return x.Views
	}
	return ""
}

func (x *StreamServiceGetRs) GetClicks() string {
	if x != nil {
		return x.Clicks
	}
	return ""
}

func (x *StreamServiceGetRs) GetLikes() string {
	if x != nil {
		return x.Likes
	}
	return ""
}

func (x *StreamServiceGetRs) GetDislikes() string {
	if x != nil {
		return x.Dislikes
	}
	return ""
}

func (x *StreamServiceGetRs) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type StreamServiceStAddRs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *StreamServiceStAddRs) Reset() {
	*x = StreamServiceStAddRs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceStAddRs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceStAddRs) ProtoMessage() {}

func (x *StreamServiceStAddRs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceStAddRs.ProtoReflect.Descriptor instead.
func (*StreamServiceStAddRs) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{7}
}

func (x *StreamServiceStAddRs) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StreamServiceStAddRq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Column string `protobuf:"bytes,2,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *StreamServiceStAddRq) Reset() {
	*x = StreamServiceStAddRq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_streamService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamServiceStAddRq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamServiceStAddRq) ProtoMessage() {}

func (x *StreamServiceStAddRq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streamService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamServiceStAddRq.ProtoReflect.Descriptor instead.
func (*StreamServiceStAddRq) Descriptor() ([]byte, []int) {
	return file_proto_streamService_proto_rawDescGZIP(), []int{8}
}

func (x *StreamServiceStAddRq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StreamServiceStAddRq) GetColumn() string {
	if x != nil {
		return x.Column
	}
	return ""
}

var File_proto_streamService_proto protoreflect.FileDescriptor

var file_proto_streamService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x22, 0xe4, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x71, 0x22, 0x40, 0x0a, 0x15, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x41, 0x64, 0x64,
	0x52, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x14,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x41,
	0x64, 0x64, 0x52, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x32, 0x9b, 0x02, 0x0a,
	0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x71, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x73, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x73, 0x12, 0x41, 0x0a, 0x05, 0x53, 0x74, 0x41, 0x64, 0x64,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x41, 0x64, 0x64, 0x52, 0x71, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x41, 0x64, 0x64, 0x52, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_streamService_proto_rawDescOnce sync.Once
	file_proto_streamService_proto_rawDescData = file_proto_streamService_proto_rawDesc
)

func file_proto_streamService_proto_rawDescGZIP() []byte {
	file_proto_streamService_proto_rawDescOnce.Do(func() {
		file_proto_streamService_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_streamService_proto_rawDescData)
	})
	return file_proto_streamService_proto_rawDescData
}

var file_proto_streamService_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_streamService_proto_goTypes = []interface{}{
	(*StreamServiceCreateRq)(nil), // 0: proto.StreamServiceCreateRq
	(*Stream)(nil),                // 1: proto.Stream
	(*StreamServiceCreateRs)(nil), // 2: proto.StreamServiceCreateRs
	(*StreamServiceGetAllRq)(nil), // 3: proto.StreamServiceGetAllRq
	(*StreamServiceGetAllRs)(nil), // 4: proto.StreamServiceGetAllRs
	(*StreamServiceGetRq)(nil),    // 5: proto.StreamServiceGetRq
	(*StreamServiceGetRs)(nil),    // 6: proto.StreamServiceGetRs
	(*StreamServiceStAddRs)(nil),  // 7: proto.StreamServiceStAddRs
	(*StreamServiceStAddRq)(nil),  // 8: proto.StreamServiceStAddRq
}
var file_proto_streamService_proto_depIdxs = []int32{
	1, // 0: proto.StreamServiceGetAllRs.streams:type_name -> proto.Stream
	0, // 1: proto.StreamService.Create:input_type -> proto.StreamServiceCreateRq
	3, // 2: proto.StreamService.GetAll:input_type -> proto.StreamServiceGetAllRq
	5, // 3: proto.StreamService.Get:input_type -> proto.StreamServiceGetRq
	8, // 4: proto.StreamService.StAdd:input_type -> proto.StreamServiceStAddRq
	2, // 5: proto.StreamService.Create:output_type -> proto.StreamServiceCreateRs
	4, // 6: proto.StreamService.GetAll:output_type -> proto.StreamServiceGetAllRs
	6, // 7: proto.StreamService.Get:output_type -> proto.StreamServiceGetRs
	7, // 8: proto.StreamService.StAdd:output_type -> proto.StreamServiceStAddRs
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_streamService_proto_init() }
func file_proto_streamService_proto_init() {
	if File_proto_streamService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_streamService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceCreateRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceCreateRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceGetAllRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceGetAllRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceGetRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceGetRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceStAddRs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_streamService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamServiceStAddRq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_streamService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_streamService_proto_goTypes,
		DependencyIndexes: file_proto_streamService_proto_depIdxs,
		MessageInfos:      file_proto_streamService_proto_msgTypes,
	}.Build()
	File_proto_streamService_proto = out.File
	file_proto_streamService_proto_rawDesc = nil
	file_proto_streamService_proto_goTypes = nil
	file_proto_streamService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StreamServiceClient is the client API for StreamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamServiceClient interface {
	Create(ctx context.Context, in *StreamServiceCreateRq, opts ...grpc.CallOption) (*StreamServiceCreateRs, error)
	GetAll(ctx context.Context, in *StreamServiceGetAllRq, opts ...grpc.CallOption) (*StreamServiceGetAllRs, error)
	Get(ctx context.Context, in *StreamServiceGetRq, opts ...grpc.CallOption) (*StreamServiceGetRs, error)
	StAdd(ctx context.Context, in *StreamServiceStAddRq, opts ...grpc.CallOption) (*StreamServiceStAddRs, error)
}

type streamServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStreamServiceClient(cc grpc.ClientConnInterface) StreamServiceClient {
	return &streamServiceClient{cc}
}

func (c *streamServiceClient) Create(ctx context.Context, in *StreamServiceCreateRq, opts ...grpc.CallOption) (*StreamServiceCreateRs, error) {
	out := new(StreamServiceCreateRs)
	err := c.cc.Invoke(ctx, "/proto.StreamService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) GetAll(ctx context.Context, in *StreamServiceGetAllRq, opts ...grpc.CallOption) (*StreamServiceGetAllRs, error) {
	out := new(StreamServiceGetAllRs)
	err := c.cc.Invoke(ctx, "/proto.StreamService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) Get(ctx context.Context, in *StreamServiceGetRq, opts ...grpc.CallOption) (*StreamServiceGetRs, error) {
	out := new(StreamServiceGetRs)
	err := c.cc.Invoke(ctx, "/proto.StreamService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamServiceClient) StAdd(ctx context.Context, in *StreamServiceStAddRq, opts ...grpc.CallOption) (*StreamServiceStAddRs, error) {
	out := new(StreamServiceStAddRs)
	err := c.cc.Invoke(ctx, "/proto.StreamService/StAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamServiceServer is the server API for StreamService service.
type StreamServiceServer interface {
	Create(context.Context, *StreamServiceCreateRq) (*StreamServiceCreateRs, error)
	GetAll(context.Context, *StreamServiceGetAllRq) (*StreamServiceGetAllRs, error)
	Get(context.Context, *StreamServiceGetRq) (*StreamServiceGetRs, error)
	StAdd(context.Context, *StreamServiceStAddRq) (*StreamServiceStAddRs, error)
}

// UnimplementedStreamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStreamServiceServer struct {
}

func (*UnimplementedStreamServiceServer) Create(context.Context, *StreamServiceCreateRq) (*StreamServiceCreateRs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedStreamServiceServer) GetAll(context.Context, *StreamServiceGetAllRq) (*StreamServiceGetAllRs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedStreamServiceServer) Get(context.Context, *StreamServiceGetRq) (*StreamServiceGetRs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedStreamServiceServer) StAdd(context.Context, *StreamServiceStAddRq) (*StreamServiceStAddRs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StAdd not implemented")
}

func RegisterStreamServiceServer(s *grpc.Server, srv StreamServiceServer) {
	s.RegisterService(&_StreamService_serviceDesc, srv)
}

func _StreamService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamServiceCreateRq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).Create(ctx, req.(*StreamServiceCreateRq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamServiceGetAllRq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).GetAll(ctx, req.(*StreamServiceGetAllRq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamServiceGetRq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).Get(ctx, req.(*StreamServiceGetRq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamService_StAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StreamServiceStAddRq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamServiceServer).StAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamService/StAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamServiceServer).StAdd(ctx, req.(*StreamServiceStAddRq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StreamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StreamService",
	HandlerType: (*StreamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _StreamService_Create_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _StreamService_GetAll_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _StreamService_Get_Handler,
		},
		{
			MethodName: "StAdd",
			Handler:    _StreamService_StAdd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/streamService.proto",
}
